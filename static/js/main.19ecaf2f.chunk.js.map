{"version":3,"sources":["components/CodeBox/CodeBox.jsx","components/CodeBox/CodeBoxBorder.jsx","components/CodeBox/CodeBoxBorderHorizontal.jsx","App.js","reportWebVitals.js","index.js","components/CodeBox/codeBoxBorderStyles.module.css"],"names":["CodeBox","props","state","title","content","code","helpText","help","html","scrollTop","rotated","onChangeText","bind","highlight","coupleScroll","pCode","React","createRef","scroller","coupleDiv","this","e","current","scrollLeft","Prism","languages","js","innerHTML","setState","target","value","update","id","className","style","width","onClick","compiler","ref","onScroll","spellCheck","name","onChange","Component","CodeBoxBorder","onDragStart","onDragEnd","drag","x","clientX","total","document","getElementById","parentNode","getBoundingClientRect","relate","position","dragging","addEventListener","removeEventListener","static","styles","border","onMouseDown","borderNonStatic","y","clientY","height","newVal","decodeHTMLEntities","text","data","map","item","textArea","createElement","App","Code1","localStorage","getItem","Code2","Code3","resizePosition","showResult","matchInput","matchF1","matchF2","minWidth","minHeight","maxHeight","terminalMessage","title1","title2","title3","help1","help2","help3","getWidth","setBorderPosition","setBorderPositionH","setCodeBoxProperty","compile","compare","axios","post","then","resp","input","f1","f2","error","output1","output2","setItem","borderId","newPosition","JSON","parse","stringify","leftLimit","rightLimit","CodeBoxBorderHorizontal","hidden","split","idx","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.19ecaf2f.chunk.js","sourcesContent":["import React from 'react';\r\nimport Prism from 'prismjs';\r\nimport './prism.css';\r\nimport './CodeBox.css';\r\nclass CodeBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: this.props.title,\r\n            content: this.props.code,\r\n            helpText: this.props.help,\r\n            html: \"\",\r\n            scrollTop: 0,\r\n            rotated: false,\r\n        }\r\n        this.onChangeText = this.onChangeText.bind(this);\r\n        this.highlight = this.highlight.bind(this);\r\n        this.coupleScroll = this.coupleScroll.bind(this);\r\n        this.pCode = React.createRef();\r\n        this.scroller = React.createRef();\r\n        this.coupleDiv = React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        this.highlight();\r\n    }\r\n    coupleScroll(e) {\r\n        this.coupleDiv.current.scrollTop = this.scroller.current.scrollTop;\r\n        this.coupleDiv.current.scrollLeft = this.scroller.current.scrollLeft;\r\n    }\r\n    highlight() {\r\n        const html = Prism.highlight(this.state.content, Prism.languages.js, 'js');\r\n        this.pCode.current.innerHTML = html;\r\n    }\r\n    onChangeText(e) {\r\n\r\n        this.setState({\r\n            content: e.target.value\r\n        }, () => {\r\n            this.highlight();\r\n            this.props.update(this.props.id, e.target.value);\r\n        });\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='code-box' style={{ width: this.props.width ? this.props.width : '100%' }}>\r\n                <div className='box-title'>\r\n                    <div className='code-title'>{this.state.title}</div>\r\n                    <div className='title-command-buttons'>\r\n                        <i onClick={()=>{this.props.compiler(this.props.id, this.state.content)}} className=\"fa fa-play code-compile-button\"></i>\r\n                        <div onClick={() => { this.setState({ rotated: !this.state.rotated }) }} className=\"help-question\">{this.state.rotated ? '^' : '?'}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"box-frame\" >\r\n                    <pre ref={this.coupleDiv}>\r\n                        <code ref={this.pCode} className=\"language-js\" />\r\n                    </pre>\r\n                    <textarea ref={this.scroller} onScroll={this.coupleScroll} spellCheck=\"false\" name='textBox' value={this.state.content} onChange={this.onChangeText} className='code-text'></textarea>\r\n                </div>\r\n                <div className={this.state.rotated ? \"help-div\" : \"help-div rotated\"}>\r\n                    {this.state.helpText}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CodeBox;","import React from 'react';\r\nimport styles from './codeBoxBorderStyles.module.css';\r\nclass CodeBoxBorder extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.onDragStart = this.onDragStart.bind(this);\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n        this.drag = this.drag.bind(this);\r\n    }\r\n    drag(e) {\r\n            const x = e.clientX;\r\n            const total = document.getElementById(`top-part`).parentNode.getBoundingClientRect().width;\r\n            this.props.onChange(this.props.id,this.state.relate+((x-this.state.position)*100/total));\r\n    }\r\n    onDragStart(e) {\r\n        var x = (e.clientX);\r\n        this.setState({\r\n            position: x,\r\n            relate: this.props.width,\r\n            dragging: true\r\n        }, ()=>{\r\n            document.addEventListener(\"mousemove\", this.drag);\r\n            document.addEventListener(\"mouseup\", this.onDragEnd);\r\n        });\r\n    }\r\n    onDragEnd(e) {\r\n        document.removeEventListener(\"mousemove\", this.drag);\r\n        this.setState({\r\n            dragging: false\r\n        });\r\n    }\r\n    render() {\r\n        if(this.props.static){\r\n            return <div className={styles.border}></div>;\r\n        }else{\r\n            return <div id={`border-${this.props.id}`} onMouseDown={this.onDragStart} className={`${styles.border} ${styles.borderNonStatic}`}></div>;\r\n        };\r\n    }\r\n}\r\n\r\nexport default CodeBoxBorder;","import React from 'react';\r\nimport styles from './codeBoxBorderStyles.module.css';\r\nclass CodeBoxBorder extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.onDragStart = this.onDragStart.bind(this);\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n        this.drag = this.drag.bind(this);\r\n    }\r\n    drag(e) {\r\n        const y = e.clientY;\r\n        const total = document.getElementById(`view-page`).parentNode.getBoundingClientRect().height;\r\n        let newVal = this.state.relate + ((y - this.state.position) * 100 / total);\r\n        this.props.onChange(newVal);\r\n    }\r\n    onDragStart(e) {\r\n        var y = (e.clientY);\r\n        this.setState({\r\n            position: y,\r\n            relate: this.props.height,\r\n            dragging: true\r\n        }, () => {\r\n            document.addEventListener(\"mousemove\", this.drag);\r\n            document.addEventListener(\"mouseup\", this.onDragEnd);\r\n        });\r\n    }\r\n    onDragEnd(e) {\r\n        document.removeEventListener(\"mousemove\", this.drag);\r\n        this.setState({\r\n            dragging: false\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div id={`borderH-${this.props.id}`} onMouseDown={this.onDragStart} className=\"horizontal-border\"></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CodeBoxBorder;","import axios from 'axios';\r\nimport React from 'react';\r\nimport './App.css';\r\nimport CodeBox from './components/CodeBox/CodeBox';\r\nimport CodeBoxBorder from './components/CodeBox/CodeBoxBorder';\r\nimport CodeBoxBorderHorizontal from './components/CodeBox/CodeBoxBorderHorizontal';\r\n\r\nfunction decodeHTMLEntities(text) {\r\n  let data=[text];\r\n  data = data.map(item => {\r\n    var textArea = document.createElement('textarea');\r\n    textArea.innerHTML = item;\r\n    return textArea.value;\r\n  })\r\n  return data;\r\n}\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    let Code1 = localStorage.getItem(\"Code1\");\r\n    if(Code1==null){\r\n      Code1=`#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main(){\r\n    cout<<\"your input\";\r\n}`;\r\n    }\r\n    let Code2 = localStorage.getItem(\"Code2\");\r\n    if(Code2==null){\r\n      Code2=`#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main(){\r\n  cout<<\"Output from f1\"<<endl;\r\n}`;\r\n    }\r\n    let Code3 = localStorage.getItem(\"Code3\");\r\n    if(Code3==null){\r\n      Code3=`#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main(){\r\n  cout<<\"Output from f2\"<<endl;\r\n}`;\r\n    }\r\n    this.state = {\r\n      resizePosition: [0, 33, 67, 100],\r\n      showResult: false,\r\n      matchInput: '',\r\n      matchF1: '',\r\n      matchF2: '',\r\n      minWidth: 20,\r\n      minHeight: 20,\r\n      maxHeight: 80,\r\n      height: 50,\r\n      terminalMessage: [`Output Pane`],\r\n      title1: 'CustomInputGenerator.cpp',\r\n      title2: 'Program1.cpp',\r\n      title3: 'Program2.cpp',\r\n      help1: `In each run, your code should print the new set of inputs to the stdout. These inputs will then be consumed by Program1 and Program2. Only use cout for printing (Dont use printf)`,\r\n      help2: `All inputs should be read using cin (dont use scanf). Code must output using cout (dont use printf)`,\r\n      help3: `All inputs should be read using cin (dont use scanf). Code must output using cout (dont use printf)`,\r\n      Code1: Code1,\r\n      Code2: Code2,\r\n      Code3: Code3\r\n    }\r\n    this.getWidth = this.getWidth.bind(this);\r\n    this.setBorderPosition = this.setBorderPosition.bind(this);\r\n    this.setBorderPositionH = this.setBorderPositionH.bind(this);\r\n    this.setCodeBoxProperty = this.setCodeBoxProperty.bind(this);\r\n    this.compile = this.compile.bind(this);\r\n    this.compare = this.compare.bind(this);\r\n  }\r\n  compile(id, code) {\r\n    this.setState({ terminalMessage: [`Compiling ${this.state[`title${id}`]}`], showResult: false }, () => {\r\n      axios.post('https://q-tv.herokuapp.com/api/compile/', {\r\n        code\r\n      }).then((resp) => {\r\n        this.setState({ terminalMessage: decodeHTMLEntities(resp.data) });\r\n      });\r\n    });\r\n  }\r\n  compare() {\r\n    this.setState({ terminalMessage: [`Comparing ${this.state.title2} and ${this.state.title3}`], showResult: false }, () => {\r\n      axios.post('https://q-tv.herokuapp.com/api/compile/compare', {\r\n        input: this.state.Code1,\r\n        f1: this.state.Code2,\r\n        f2: this.state.Code3\r\n      }).then((resp) => {\r\n        if (resp.data.code == 0) {\r\n          this.setState({ terminalMessage: decodeHTMLEntities(resp.data.error) });\r\n        } else if (resp.data.code == 1) {\r\n          const message = `Found mismatch!\\n\\n`\r\n          this.setState({\r\n            terminalMessage: decodeHTMLEntities(message),\r\n            matchInput: resp.data.input,\r\n            matchF1: resp.data.output1,\r\n            matchF2: resp.data.output2,\r\n            showResult: true\r\n          });\r\n        } else {\r\n          this.setState({ terminalMessage: ['Timeout reached!'] });\r\n        }\r\n      });\r\n    });\r\n  }\r\n  setCodeBoxProperty(id, value) {\r\n    localStorage.setItem(`Code${id}`, value);\r\n    this.setState({\r\n      [`Code${id}`]: value\r\n    });\r\n  }\r\n  getWidth(item) {\r\n    return this.state.resizePosition[item] - this.state.resizePosition[item - 1];\r\n  }\r\n  setBorderPosition(borderId, newPosition) {\r\n    const resizePosition = JSON.parse(JSON.stringify(this.state.resizePosition));\r\n    const leftLimit = this.state.resizePosition[borderId - 1] + this.state.minWidth;\r\n    const rightLimit = this.state.resizePosition[borderId + 1] - this.state.minWidth;\r\n    if (newPosition < leftLimit) {\r\n      newPosition = leftLimit;\r\n    } else if (newPosition > rightLimit) {\r\n      newPosition = rightLimit;\r\n    }\r\n    resizePosition[borderId] = newPosition;\r\n    this.setState({ resizePosition });\r\n  }\r\n  setBorderPositionH(newPosition) {\r\n    if (newPosition < this.state.minHeight) {\r\n      newPosition = this.state.minHeight;\r\n    } else if (newPosition > this.state.maxHeight) {\r\n      newPosition = this.state.maxHeight;\r\n    }\r\n    this.setState({ height: newPosition });\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"view-page\">\r\n        <div className=\"top-part\" id=\"top-part\" style={{ height: `${this.state.height}%` }}>\r\n          <CodeBoxBorder static />\r\n          <CodeBox compiler={this.compile} id={1} width={`${this.getWidth(1)}%`} update={this.setCodeBoxProperty} code={this.state.Code1} title={this.state.title1} help={this.state.help1} />\r\n          <CodeBoxBorder id={1} width={this.state.resizePosition[1]} onChange={this.setBorderPosition} />\r\n          <CodeBox compiler={this.compile} id={2} width={`${this.getWidth(2)}%`} update={this.setCodeBoxProperty} code={this.state.Code2} title={this.state.title2} help={this.state.help2} />\r\n          <CodeBoxBorder id={2} width={this.state.resizePosition[2]} onChange={this.setBorderPosition} />\r\n          <CodeBox compiler={this.compile} id={3} width={`${this.getWidth(3)}%`} update={this.setCodeBoxProperty} code={this.state.Code3} title={this.state.title3} help={this.state.help3} />\r\n          <CodeBoxBorder static />\r\n        </div>\r\n        <CodeBoxBorderHorizontal height={this.state.height} onChange={this.setBorderPositionH} />\r\n        <div className='command-pane'>\r\n          {/* <button className='command-pane-buttons'>TEST CUSTOM INPUT GENERATOR</button>\r\n          <button className='command-pane-buttons'>RUN Program 1</button>\r\n          <button className='command-pane-buttons'>RUN Program 2</button> */}\r\n          <button onClick={this.compare} className='command-pane-buttons'>COMPARE CODE</button>\r\n        </div>\r\n        <CodeBoxBorderHorizontal height={this.state.height} onChange={this.setBorderPositionH} />\r\n        <div className=\"console\" style={{ height: `calc(${100 - this.state.height}% - 32px)` }}>\r\n          {this.state.terminalMessage.map(item => (\r\n            item === '' ? <br /> : <div className='console-line-item'>{item}</div>\r\n          ))}\r\n          <br/>\r\n          <br/>\r\n          <div className='result-div' hidden={!this.state.showResult}>\r\n            Input\r\n            <div className='console-textarea'>{\r\n              this.state.matchInput.split(\"\\n\").map(function (item, idx) {\r\n                return (\r\n                  <span key={idx}>\r\n                    {item}\r\n                    <br />\r\n                  </span>\r\n                )\r\n              })\r\n            }</div>\r\n            Output From Program 1\r\n            <div className='console-textarea'>{\r\n              this.state.matchF1.split(\"\\n\").map(function (item, idx) {\r\n                return (\r\n                  <span key={idx}>\r\n                    {item}\r\n                    <br />\r\n                  </span>\r\n                )\r\n              })\r\n            }</div>\r\n            Output From Program 2\r\n            <div className='console-textarea'>{\r\n              this.state.matchF2.split(\"\\n\").map(function (item, idx) {\r\n                return (\r\n                  <span key={idx}>\r\n                    {item}\r\n                    <br />\r\n                  </span>\r\n                )\r\n              })\r\n            }</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"codeBoxBorderStyles_border__sFbIz\",\"borderNonStatic\":\"codeBoxBorderStyles_borderNonStatic__2_L5c\",\"slider\":\"codeBoxBorderStyles_slider__WP2lb\"};"],"sourceRoot":""}